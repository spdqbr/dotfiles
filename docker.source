#!/bin/bash

alias dfimage="docker run -v /var/run/docker.sock:/var/run/docker.sock:Z --rm chenzj/dfimage"


alias drm='docker ps -q -a | xargs docker rm'
alias drmi='docker images -q -a | xargs docker rmi'

alias dockerlogs='docker attach --sig-proxy=false'

alias dockerssh='docker run --rm --tty --interactive --user "$(id -u)" --volume "$PWD":/host:Z --entrypoint /bin/bash'
alias dockersh='docker run --rm --tty --interactive --user "$(id -u)" --volume "$PWD":/host:Z --entrypoint /bin/sh'

alias dfimage='docker run -v /var/run/docker.sock:/var/run/docker.sock --rm chenzj/dfimage'

dockerjoin() {
  docker exec -i -t "$1" /bin/bash
}

dockerjoinsh() {
  docker exec -i -t "$1" /bin/sh
}

_getDockerContainers(){
  local list=$( docker ps -q -a )
  local list2=$( docker ps -a --format "{{ .Names }}" )
  echo -e "${list[@]}\n${list2[@]}"
}

_getDockerImages(){
  local list=$( docker images -q )
  local list2=$( docker images --format '{{ print .Repository ":" .Tag }}' | grep -v '<none>' )
  echo -e "${list[@]}\n${list2[@]}"
}

_dockerps_complete() {
  local word=${COMP_WORDS[COMP_CWORD]}
  list="$( _getDockerContainers )"
  IFS=$'\n'
  list=$(compgen -W "${list[@]}" -- "$word")
  COMPREPLY=("$list")
  return 0
}

_dockerimages_complete() {
  local word=${COMP_WORDS[COMP_CWORD]}
  COMP_WORDBREAKS="${COMP_WORDBREAKS//:/}"
  list="$( _getDockerImages )"
  IFS=$'\n'
  list=$(compgen -W "${list[@]}" -- "$word")
  COMPREPLY=("$list")
  return 0
}

complete -F _dockerps_complete dockerlogs
complete -F _dockerps_complete dockerjoin 
complete -F _dockerimages_complete dockerssh

_docker_complete() {
  local cur prev list word
  COMPREPLY=()

  bothCommands="inspect"
  containerCommands="stop start attach exec kill logs pause restart rm stats top unpause wait"
  imageCommands="history push rmi save tag"

  cur=${COMP_WORDS[COMP_CWORD]}
  prev=${COMP_WORDS[COMP_CWORD-1]}
  word=${COMP_WORDS[COMP_CWORD]}

  if [[ $COMP_CWORD -eq 1 ]]
  then
    list=$( docker --help | sed -n -e '/^Commands:/,/^Run/p' | tail -n +2 | head -n -2 | awk '{print $1 ;}' ) 
  else
    if [[ " $bothCommands " =~ " $prev " ]]
    then
      list="$( _getDockerContainers )"
      list2="$( _getDockerImages )"
      list="$( echo -e ${list[@]}'\n' ${list2[@]} )"
    elif [[ " $containerCommands " =~ " $prev " ]]
    then
      list="$( _getDockerContainers )"
    elif [[ " $imageCommands " =~ $prev ]]
    then
      list="$( _getDockerImages )"
    else
      list=""
    fi
  fi
  IFS=$'\n'
  list=$(compgen -W "${list[@]}" -- "$word")
  COMPREPLY=($list)
  return 0
}

complete -F _docker_complete docker
